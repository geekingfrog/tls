{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ScopedTypeVariables #-}
{-# LANGUAGE TypeApplications #-}


module Main where

import Control.Monad

import qualified Data.Vector                   as V
import qualified Data.ByteString               as B
import qualified Data.ByteArray                as BA
import qualified Data.Serialize                as Serial
import qualified Data.Bits                     as Bits
import qualified Network.Simple.TCP            as TCP

import qualified Network.TLS.Pure.Packet       as Packet
import qualified Network.TLS.Pure.Cipher       as Cipher
import qualified Network.TLS.Pure.Extension    as Ext
import qualified Network.TLS.Pure.Wire         as Wire
import qualified Network.TLS.Pure.Version      as Version
import qualified Network.TLS.Pure.Transitions  as Tr


import qualified Crypto.PubKey.Curve25519      as C25519
import           Crypto.Error                  as CryptoErr
import qualified Crypto.Hash                   as H
import qualified Crypto.Hash.Algorithms        as HA
import qualified Crypto.KDF.HKDF               as HKDF
import           Crypto.Cipher.Types
import qualified Crypto.Cipher.AES             as AES

import Util

import qualified TestTypes

main :: IO ()
main = do
    clientPrivate <- CryptoErr.throwCryptoErrorIO $ C25519.secretKey $ B.pack [0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f]
    let clientPublic = C25519.toPublic clientPrivate

    let keyShareEntry = Ext.KeyShareEntry
            { Ext.kseGroup = Ext.X25519
            , Ext.ksePrivate = Just $ Wire.Opaque16 $ BA.convert clientPrivate
            , Ext.ksePublic = Wire.Opaque16 $ BA.convert clientPublic
            }

    let chlod = chloData keyShareEntry
    let chlo = Packet.ClientHello chlod
    let chloRecord = Packet.HandshakeRecord chlo

    let pkt = Packet.TLSPacket $ V.singleton chloRecord
    TCP.connect "localhost" "4433" $ \(connectionSocket, remoteAddr) -> do
        putStrLn $ "Connection established to " ++ show remoteAddr
        let chloBytes = Serial.runPut $ Wire.put pkt
        TCP.send connectionSocket chloBytes
        fromSrv <- TCP.recv connectionSocket 16000
        case fromSrv of
            Just bytes -> do
                putStrLn $ "got " <> show (B.length bytes) <> " bytes from server"
                when (B.length bytes < 40) $ putStrLn (bsToHex bytes)
                B.writeFile "./debug/Shlo.bin" bytes
                let serverPacket = Serial.runGet (Wire.get :: Serial.Get Packet.TLSPacket) bytes
                print serverPacket
                case serverPacket of
                    Left _ -> pure ()
                    Right (Packet.TLSPacket records) -> processRecords chlod records
                let handshakeHash = fmap (getHandshakeHash chlo) serverPacket
                print handshakeHash
                -- let shared = fmap (getServerPublic clientPrivate) serverPacket
                -- print shared
            Nothing -> putStrLn "got nothing from server :/"

processRecords :: Packet.ClientHelloData -> V.Vector Packet.TLSRecord -> IO ()
processRecords chlod records = do
    let mbSelectedKSE = do
        when (V.null records) $ fail "no records"
        shlod <- case V.head records of
            (Packet.HandshakeRecord (Packet.ServerHello shlod)) -> pure shlod
            _ -> fail "no server hello"
        kse <- Tr.pickKeyShareEntry chlod shlod
        pure (kse, Packet.shlodCipher shlod)

    putStrLn "selected key share entry is:"
    print mbSelectedKSE

chloData :: Ext.KeyShareEntry -> Packet.ClientHelloData
chloData kse =
    let extensions = Ext.Extensions $ V.fromList
            [ Ext.ServerNameIndication (Ext.ServerName "localhost")
            , Ext.SupportedGroups $ Ext.SupportedGroupsExtension $ V.fromList
                [ Ext.X25519
                , Ext.X448
                , Ext.Secp256r1
                , Ext.Secp521r1
                , Ext.Secp384r1
                ]
            , Ext.SignatureAlgs $ Ext.SignatureAlgorithms $ V.fromList
                [ Ext.EcdsaSecp256r1Sha256
                , Ext.EcdsaSecp384r1Sha384
                , Ext.EcdsaSecp521r1Sha512
                , Ext.Ed25519
                , Ext.Ed448
                , Ext.RsaPssRsaeSha256
                , Ext.RsaPssRsaeSha384
                , Ext.RsaPssRsaeSha512
                , Ext.RsaPssPssSha256
                , Ext.RsaPssPssSha384
                , Ext.RsaPssPssSha512
                , Ext.RsaPkcs1Sha1
                , Ext.RsaPkcs1Sha256
                , Ext.RsaPkcs1Sha384
                , Ext.RsaPkcs1Sha512
                ]
            , Ext.SupportedVersions $ Ext.SupportedVersionsClient $ V.fromList [Version.TLS13]
            , Ext.KeyShare $ Ext.KeyShareChlo $ V.singleton kse
                -- [ Ext.KeyShareEntry (Ext.X25519, Wire.Opaque16 $ B.replicate 32 0x61) -- TODO random there
                -- ]
            ]

        chloData = Packet.ClientHelloData
            { Packet.chlodCiphers = Cipher.tls13Ciphers
            , Packet.chlodSessionId = Wire.Opaque8 (B.replicate 32 0x01)
            , Packet.chlodRandom = B.replicate 32 0x01
            , Packet.chlodExtensions = extensions
            }
    in  chloData


-- -- gigantic hack to see if I can get that to work
-- getServerPublic :: C25519.SecretKey -> Packet.TLSPacket -> C25519.DhSecret
-- getServerPublic clientPrivate (Packet.TLSPacket pkt) =
--     let (Packet.HandshakeRecord (Packet.ServerHello shlo)) = V.head pkt
--         (Ext.Extensions exts) = Packet.shlodExtensions shlo
--         (Ext.KeyShare (Ext.KeyShareShlo kse)) = V.last exts
--         publicBytes = Ext.ksePublic kse
--         (Right serverPublic) = CryptoErr.eitherCryptoError (C25519.publicKey publicBytes)
--         shared = C25519.dh serverPublic clientPrivate
--     in  shared


getHandshakeHash :: Packet.Handshake -> Packet.TLSPacket -> H.Digest HA.SHA256
getHandshakeHash chlo (Packet.TLSPacket pkt) =
    let (Packet.HandshakeRecord (Packet.ServerHello shlo)) = V.head pkt
        clientBytes = Serial.runPut (Wire.put chlo)
        serverBytes = Serial.runPut (Wire.put shlo)
        hashCtx = H.hashUpdates H.hashInit [clientBytes, serverBytes]
        digest = H.hashFinalize hashCtx
    in  digest

deriveSecrets :: IO ()
deriveSecrets = do
    let (Just (helloDigest :: H.Digest HA.SHA256)) = H.digestFromByteString $ B.pack [0xda, 0x75, 0xce, 0x11, 0x39, 0xac, 0x80, 0xda, 0xe4, 0x04, 0x4d, 0xa9, 0x32, 0x35, 0x0c, 0xf6, 0x5c, 0x97, 0xcc, 0xc9, 0xe3, 0x3f, 0x1e, 0x6f, 0x7d, 0x2d, 0x4b, 0x18, 0xb7, 0x36, 0xff, 0xd5]

    let sharedSecret = B.pack [0xdf, 0x4a, 0x29, 0x1b, 0xaa, 0x1e, 0xb7, 0xcf, 0xa6, 0x93, 0x4b, 0x29, 0xb4, 0x74, 0xba, 0xad, 0x26, 0x97, 0xe2, 0x9f, 0x1f, 0x92, 0x0d, 0xcc, 0x77, 0xc8, 0xa0, 0xa0, 0x88, 0x44, 0x76, 0x24]

    let helloHash = BA.convert helloDigest :: B.ByteString
    let earlySecret = HKDF.extract (B.replicate 32 0) (B.replicate 32 0) :: HKDF.PRK HA.SHA256
    let emptyHash = BA.convert (H.hash B.empty :: H.Digest HA.SHA256)
    -- TODO don't hardcode all the sizes ?
    -- IV lengths depend on the cipher? YES !!!
    let derivedSecret = hkdfExpandLabel SHA256 32 (BA.convert earlySecret) (hkdfLabel 32 "derived" emptyHash)
    let handshakeSecret = BA.convert (HKDF.extract derivedSecret sharedSecret :: HKDF.PRK HA.SHA256)
    let clientHsTrafficSecret = hkdfExpandLabel SHA256 32 handshakeSecret (hkdfLabel 32 "c hs traffic" helloHash)
    let serverHsTrafficSecret = hkdfExpandLabel SHA256 32 handshakeSecret (hkdfLabel 32 "s hs traffic" helloHash)
    let clientHandshakeKey = hkdfExpandLabel SHA256 16 clientHsTrafficSecret (hkdfLabel 16 "key" "")
    let serverHandshakeKey = hkdfExpandLabel SHA256 16 serverHsTrafficSecret (hkdfLabel 16 "key" "")
    let clientHsIV = hkdfExpandLabel SHA256 12 clientHsTrafficSecret (hkdfLabel 12 "iv" "")
    let serverHsIV = hkdfExpandLabel SHA256 12 serverHsTrafficSecret (hkdfLabel 12 "iv" "")

    putStrLn "handshake secret"
    print $ Wire.bsToHex handshakeSecret
    putStrLn "client handshake traffic secret"
    print $ Wire.bsToHex clientHsTrafficSecret
    putStrLn "server handshake traffic secret"
    print $ Wire.bsToHex serverHsTrafficSecret
    putStrLn "client handshake key"
    print $ Wire.bsToHex clientHandshakeKey
    putStrLn "server handshake key"
    print $ Wire.bsToHex serverHandshakeKey
    putStrLn "client handshake IV"
    print $ Wire.bsToHex clientHsIV
    putStrLn "server handshake IV"
    print $ Wire.bsToHex serverHsIV

    putStrLn ""

    let updatedIV = B.pack $ B.zipWith Bits.xor (B.replicate (B.length serverHsIV) 0) serverHsIV
    aeadCtx <- CryptoErr.throwCryptoErrorIO $ do
        cipher <- cipherInit @AES.AES128 serverHandshakeKey
        aeadInit AEAD_GCM cipher updatedIV

    let tagLength = B.length testAuthTag

    let (authTag, cipherText) = aeadSimpleEncrypt aeadCtx testHeader testPlainText tagLength

    putStrLn "auth tag"
    print $ Wire.bsToHex $ BA.convert $ unAuthTag authTag

    putStrLn "cipherText"
    print $ Wire.bsToHex $ B.take 32 cipherText

    putStrLn "expected ciphertext"
    print $ Wire.bsToHex $ B.take 32 testEncrypted


    let decrypted = aeadSimpleDecrypt aeadCtx testHeader testEncrypted (AuthTag $ BA.convert testAuthTag)

    print "decrypted:"
    case decrypted of
        Nothing -> print "FAIL"
        Just bs -> print $ Wire.bsToHex $ B.take 32 bs


    -- let cipherText = testHeader <> testEncrypted
    -- print $ aeadSimpleDecrypt aeadCtx B.empty cipherText (AuthTag $ BA.convert testAuthTag)

    pure ()

data SupportedHash = SHA256 deriving (Show)

hkdfLabel :: Int -> B.ByteString -> B.ByteString -> B.ByteString
hkdfLabel outLen label ctx = Serial.runPut $ do
    Serial.putWord16be $ fromIntegral outLen
    Wire.putOpaque8 $ "tls13 " <> label
    Wire.putOpaque8 ctx

hashDigestSize :: SupportedHash -> Int
hashDigestSize SHA256 = H.hashDigestSize HA.SHA256

    -- let derivedSecret = hkdfExpandLabel SHA256 32 (BA.convert earlySecret) (hkdfLabel 32 "derived" emptyHash)
hkdfExpandLabel
    :: SupportedHash
    -> Int
    -> B.ByteString
    -> B.ByteString
    -> B.ByteString
hkdfExpandLabel SHA256 outLen secret label
    = HKDF.expand (HKDF.extractSkip secret :: HKDF.PRK HA.SHA256) label outLen


-- hkdfExpandLabel
--     :: B.ByteString
--     -> B.ByteString
--     -> B.ByteString
--     -> Int
--     -> B.ByteString

-- hkdfExpandLabel :: Hash
--                 -> ByteString
--                 -> ByteString
--                 -> ByteString
--                 -> Int
--                 -> ByteString
-- hkdfExpandLabel h secret label ctx outlen = expand' h secret hkdfLabel outlen
--   where
--     hkdfLabel = runPut $ do
--         putWord16 $ fromIntegral outlen
--         putOpaque8 ("tls13 " `BS.append` label)
--         putOpaque8 ctx
--
-- expand' :: Hash -> ByteString -> ByteString -> Int -> ByteString
-- expand' SHA1   secret label len = expand (extractSkip secret :: PRK H.SHA1)   label len
-- expand' SHA256 secret label len = expand (extractSkip secret :: PRK H.SHA256) label len
-- expand' SHA384 secret label len = expand (extractSkip secret :: PRK H.SHA384) label len
-- expand' SHA512 secret label len = expand (extractSkip secret :: PRK H.SHA512) label len
-- expand' _ _ _ _ = error "expand'"



testHeader :: B.ByteString
testHeader = B.pack [0x17, 0x03, 0x03, 0x04, 0x75]

testAuthTag :: B.ByteString
testAuthTag = B.pack
    [ 0xe0
    , 0x8b
    , 0x0e
    , 0x45
    , 0x5a
    , 0x35
    , 0x0a
    , 0xe5
    , 0x4d
    , 0x76
    , 0x34
    , 0x9a
    , 0xa6
    , 0x8c
    , 0x71
    , 0xae
    ]

testEncrypted :: B.ByteString
testEncrypted = B.pack
    [ 0xda
    , 0x1e
    , 0xc2
    , 0xd7
    , 0xbd
    , 0xa8
    , 0xeb
    , 0xf7
    , 0x3e
    , 0xdd
    , 0x50
    , 0x10
    , 0xfb
    , 0xa8
    , 0x08
    , 0x9f
    , 0xd4
    , 0x26
    , 0xb0
    , 0xea
    , 0x1e
    , 0xa4
    , 0xd8
    , 0x8d
    , 0x07
    , 0x4f
    , 0xfe
    , 0xa8
    , 0xa9
    , 0x87
    , 0x3a
    , 0xf5
    , 0xf5
    , 0x02
    , 0x26
    , 0x1e
    , 0x34
    , 0xb1
    , 0x56
    , 0x33
    , 0x43
    , 0xe9
    , 0xbe
    , 0xb6
    , 0x13
    , 0x2e
    , 0x7e
    , 0x83
    , 0x6d
    , 0x65
    , 0xdb
    , 0x6d
    , 0xcf
    , 0x00
    , 0xbc
    , 0x40
    , 0x19
    , 0x35
    , 0xae
    , 0x36
    , 0x9c
    , 0x44
    , 0x0d
    , 0x67
    , 0xaf
    , 0x71
    , 0x9e
    , 0xc0
    , 0x3b
    , 0x98
    , 0x4c
    , 0x45
    , 0x21
    , 0xb9
    , 0x05
    , 0xd5
    , 0x8b
    , 0xa2
    , 0x19
    , 0x7c
    , 0x45
    , 0xc4
    , 0xf7
    , 0x73
    , 0xbd
    , 0x9d
    , 0xd1
    , 0x21
    , 0xb4
    , 0xd2
    , 0xd4
    , 0xe6
    , 0xad
    , 0xff
    , 0xfa
    , 0x27
    , 0xc2
    , 0xa8
    , 0x1a
    , 0x99
    , 0xa8
    , 0xef
    , 0xe8
    , 0x56
    , 0xc3
    , 0x5e
    , 0xe0
    , 0x8b
    , 0x71
    , 0xb3
    , 0xe4
    , 0x41
    , 0xbb
    , 0xec
    , 0xaa
    , 0x65
    , 0xfe
    , 0x72
    , 0x08
    , 0x15
    , 0xca
    , 0xb5
    , 0x8d
    , 0xb3
    , 0xef
    , 0xa8
    , 0xd1
    , 0xe5
    , 0xb7
    , 0x1c
    , 0x58
    , 0xe8
    , 0xd1
    , 0xfd
    , 0xb6
    , 0xb2
    , 0x1b
    , 0xfc
    , 0x66
    , 0xa9
    , 0x86
    , 0x5f
    , 0x85
    , 0x2c
    , 0x1b
    , 0x4b
    , 0x64
    , 0x0e
    , 0x94
    , 0xbd
    , 0x90
    , 0x84
    , 0x69
    , 0xe7
    , 0x15
    , 0x1f
    , 0x9b
    , 0xbc
    , 0xa3
    , 0xce
    , 0x53
    , 0x22
    , 0x4a
    , 0x27
    , 0x06
    , 0x2c
    , 0xeb
    , 0x24
    , 0x0a
    , 0x10
    , 0x5b
    , 0xd3
    , 0x13
    , 0x2d
    , 0xc1
    , 0x85
    , 0x44
    , 0x47
    , 0x77
    , 0x94
    , 0xc3
    , 0x73
    , 0xbc
    , 0x0f
    , 0xb5
    , 0xa2
    , 0x67
    , 0x88
    , 0x5c
    , 0x85
    , 0x7d
    , 0x4c
    , 0xcb
    , 0x4d
    , 0x31
    , 0x74
    , 0x2b
    , 0x7a
    , 0x29
    , 0x62
    , 0x40
    , 0x29
    , 0xfd
    , 0x05
    , 0x94
    , 0x0d
    , 0xe3
    , 0xf9
    , 0xf9
    , 0xb6
    , 0xe0
    , 0xa9
    , 0xa2
    , 0x37
    , 0x67
    , 0x2b
    , 0xc6
    , 0x24
    , 0xba
    , 0x28
    , 0x93
    , 0xa2
    , 0x17
    , 0x09
    , 0x83
    , 0x3c
    , 0x52
    , 0x76
    , 0xd4
    , 0x13
    , 0x63
    , 0x1b
    , 0xdd
    , 0xe6
    , 0xae
    , 0x70
    , 0x08
    , 0xc6
    , 0x97
    , 0xa8
    , 0xef
    , 0x42
    , 0x8a
    , 0x79
    , 0xdb
    , 0xf6
    , 0xe8
    , 0xbb
    , 0xeb
    , 0x47
    , 0xc4
    , 0xe4
    , 0x08
    , 0xef
    , 0x65
    , 0x6d
    , 0x9d
    , 0xc1
    , 0x9b
    , 0x8b
    , 0x5d
    , 0x49
    , 0xbc
    , 0x09
    , 0x1e
    , 0x21
    , 0x77
    , 0x35
    , 0x75
    , 0x94
    , 0xc8
    , 0xac
    , 0xd4
    , 0x1c
    , 0x10
    , 0x1c
    , 0x77
    , 0x50
    , 0xcb
    , 0x11
    , 0xb5
    , 0xbe
    , 0x6a
    , 0x19
    , 0x4b
    , 0x8f
    , 0x87
    , 0x70
    , 0x88
    , 0xc9
    , 0x82
    , 0x8e
    , 0x35
    , 0x07
    , 0xda
    , 0xda
    , 0x17
    , 0xbb
    , 0x14
    , 0xbb
    , 0x2c
    , 0x73
    , 0x89
    , 0x03
    , 0xc7
    , 0xaa
    , 0xb4
    , 0x0c
    , 0x54
    , 0x5c
    , 0x46
    , 0xaa
    , 0x53
    , 0x82
    , 0x3b
    , 0x12
    , 0x01
    , 0x81
    , 0xa1
    , 0x6c
    , 0xe9
    , 0x28
    , 0x76
    , 0x28
    , 0x8c
    , 0x4a
    , 0xcd
    , 0x81
    , 0x5b
    , 0x23
    , 0x3d
    , 0x96
    , 0xbb
    , 0x57
    , 0x2b
    , 0x16
    , 0x2e
    , 0xc1
    , 0xb9
    , 0xd7
    , 0x12
    , 0xf2
    , 0xc3
    , 0x96
    , 0x6c
    , 0xaa
    , 0xc9
    , 0xcf
    , 0x17
    , 0x4f
    , 0x3a
    , 0xed
    , 0xfe
    , 0xc4
    , 0xd1
    , 0x9f
    , 0xf9
    , 0xa8
    , 0x7f
    , 0x8e
    , 0x21
    , 0xe8
    , 0xe1
    , 0xa9
    , 0x78
    , 0x9b
    , 0x49
    , 0x0b
    , 0xa0
    , 0x5f
    , 0x1d
    , 0xeb
    , 0xd2
    , 0x17
    , 0x32
    , 0xfb
    , 0x2e
    , 0x15
    , 0xa0
    , 0x17
    , 0xc4
    , 0x75
    , 0xc4
    , 0xfd
    , 0x00
    , 0xbe
    , 0x04
    , 0x21
    , 0x86
    , 0xdc
    , 0x29
    , 0xe6
    , 0x8b
    , 0xb7
    , 0xec
    , 0xe1
    , 0x92
    , 0x43
    , 0x8f
    , 0x3b
    , 0x0c
    , 0x5e
    , 0xf8
    , 0xe4
    , 0xa5
    , 0x35
    , 0x83
    , 0xa0
    , 0x19
    , 0x43
    , 0xcf
    , 0x84
    , 0xbb
    , 0xa5
    , 0x84
    , 0x21
    , 0x73
    , 0xa6
    , 0xb3
    , 0xa7
    , 0x28
    , 0x95
    , 0x66
    , 0x68
    , 0x7c
    , 0x30
    , 0x18
    , 0xf7
    , 0x64
    , 0xab
    , 0x18
    , 0x10
    , 0x31
    , 0x69
    , 0x91
    , 0x93
    , 0x28
    , 0x71
    , 0x3c
    , 0x3b
    , 0xd4
    , 0x63
    , 0xd3
    , 0x39
    , 0x8a
    , 0x1f
    , 0xeb
    , 0x8e
    , 0x68
    , 0xe4
    , 0x4c
    , 0xfe
    , 0x48
    , 0x2f
    , 0x72
    , 0x84
    , 0x7f
    , 0x46
    , 0xc8
    , 0x0e
    , 0x6c
    , 0xc7
    , 0xf6
    , 0xcc
    , 0xf1
    , 0x79
    , 0xf4
    , 0x82
    , 0xc8
    , 0x88
    , 0x59
    , 0x4e
    , 0x76
    , 0x27
    , 0x66
    , 0x53
    , 0xb4
    , 0x83
    , 0x98
    , 0xa2
    , 0x6c
    , 0x7c
    , 0x9e
    , 0x42
    , 0x0c
    , 0xb6
    , 0xc1
    , 0xd3
    , 0xbc
    , 0x76
    , 0x46
    , 0xf3
    , 0x3b
    , 0xb8
    , 0x32
    , 0xbf
    , 0xba
    , 0x98
    , 0x48
    , 0x9c
    , 0xad
    , 0xfb
    , 0xd5
    , 0x5d
    , 0xd8
    , 0xb2
    , 0xc5
    , 0x76
    , 0x87
    , 0xa4
    , 0x7a
    , 0xcb
    , 0xa4
    , 0xab
    , 0x39
    , 0x01
    , 0x52
    , 0xd8
    , 0xfb
    , 0xb3
    , 0xf2
    , 0x03
    , 0x27
    , 0xd8
    , 0x24
    , 0xb2
    , 0x84
    , 0xd2
    , 0x88
    , 0xfb
    , 0x01
    , 0x52
    , 0xe4
    , 0x9f
    , 0xc4
    , 0x46
    , 0x78
    , 0xae
    , 0xd4
    , 0xd3
    , 0xf0
    , 0x85
    , 0xb7
    , 0xc5
    , 0x5d
    , 0xe7
    , 0x7b
    , 0xd4
    , 0x5a
    , 0xf8
    , 0x12
    , 0xfc
    , 0x37
    , 0x94
    , 0x4a
    , 0xd2
    , 0x45
    , 0x4f
    , 0x99
    , 0xfb
    , 0xb3
    , 0x4a
    , 0x58
    , 0x3b
    , 0xf1
    , 0x6b
    , 0x67
    , 0x65
    , 0x9e
    , 0x6f
    , 0x21
    , 0x6d
    , 0x34
    , 0xb1
    , 0xd7
    , 0x9b
    , 0x1b
    , 0x4d
    , 0xec
    , 0xc0
    , 0x98
    , 0xa4
    , 0x42
    , 0x07
    , 0xe1
    , 0xc5
    , 0xfe
    , 0xeb
    , 0x6c
    , 0xe3
    , 0x0a
    , 0xcc
    , 0x2c
    , 0xf7
    , 0xe2
    , 0xb1
    , 0x34
    , 0x49
    , 0x0b
    , 0x44
    , 0x27
    , 0x44
    , 0x77
    , 0x2d
    , 0x18
    , 0x4e
    , 0x59
    , 0x03
    , 0x8a
    , 0xa5
    , 0x17
    , 0xa9
    , 0x71
    , 0x54
    , 0x18
    , 0x1e
    , 0x4d
    , 0xfd
    , 0x94
    , 0xfe
    , 0x72
    , 0xa5
    , 0xa4
    , 0xca
    , 0x2e
    , 0x7e
    , 0x22
    , 0xbc
    , 0xe7
    , 0x33
    , 0xd0
    , 0x3e
    , 0x7d
    , 0x93
    , 0x19
    , 0x71
    , 0x0b
    , 0xef
    , 0xbc
    , 0x30
    , 0xd7
    , 0x82
    , 0x6b
    , 0x72
    , 0x85
    , 0x19
    , 0xba
    , 0x74
    , 0x69
    , 0x0e
    , 0x4f
    , 0x90
    , 0x65
    , 0x87
    , 0xa0
    , 0x38
    , 0x28
    , 0x95
    , 0xb9
    , 0x0d
    , 0x82
    , 0xed
    , 0x3e
    , 0x35
    , 0x7f
    , 0xaf
    , 0x8e
    , 0x59
    , 0xac
    , 0xa8
    , 0x5f
    , 0xd2
    , 0x06
    , 0x3a
    , 0xb5
    , 0x92
    , 0xd8
    , 0x3d
    , 0x24
    , 0x5a
    , 0x91
    , 0x9e
    , 0xa5
    , 0x3c
    , 0x50
    , 0x1b
    , 0x9a
    , 0xcc
    , 0xd2
    , 0xa1
    , 0xed
    , 0x95
    , 0x1f
    , 0x43
    , 0xc0
    , 0x49
    , 0xab
    , 0x9d
    , 0x25
    , 0xc7
    , 0xf1
    , 0xb7
    , 0x0a
    , 0xe4
    , 0xf9
    , 0x42
    , 0xed
    , 0xb1
    , 0xf3
    , 0x11
    , 0xf7
    , 0x41
    , 0x78
    , 0x33
    , 0x06
    , 0x22
    , 0x45
    , 0xb4
    , 0x29
    , 0xd4
    , 0xf0
    , 0x13
    , 0xae
    , 0x90
    , 0x19
    , 0xff
    , 0x52
    , 0x04
    , 0x4c
    , 0x97
    , 0xc7
    , 0x3b
    , 0x88
    , 0x82
    , 0xcf
    , 0x03
    , 0x95
    , 0x5c
    , 0x73
    , 0x9f
    , 0x87
    , 0x4a
    , 0x02
    , 0x96
    , 0x37
    , 0xc0
    , 0xf0
    , 0x60
    , 0x71
    , 0x00
    , 0xe3
    , 0x07
    , 0x0f
    , 0x40
    , 0x8d
    , 0x08
    , 0x2a
    , 0xa7
    , 0xa2
    , 0xab
    , 0xf1
    , 0x3e
    , 0x73
    , 0xbd
    , 0x1e
    , 0x25
    , 0x2c
    , 0x22
    , 0x8a
    , 0xba
    , 0x7a
    , 0x9c
    , 0x1f
    , 0x07
    , 0x5b
    , 0xc4
    , 0x39
    , 0x57
    , 0x1b
    , 0x35
    , 0x93
    , 0x2f
    , 0x5c
    , 0x91
    , 0x2c
    , 0xb0
    , 0xb3
    , 0x8d
    , 0xa1
    , 0xc9
    , 0x5e
    , 0x64
    , 0xfc
    , 0xf9
    , 0xbf
    , 0xec
    , 0x0b
    , 0x9b
    , 0x0d
    , 0xd8
    , 0xf0
    , 0x42
    , 0xfd
    , 0xf0
    , 0x5e
    , 0x50
    , 0x58
    , 0x29
    , 0x9e
    , 0x96
    , 0xe4
    , 0x18
    , 0x50
    , 0x74
    , 0x91
    , 0x9d
    , 0x90
    , 0xb7
    , 0xb3
    , 0xb0
    , 0xa9
    , 0x7e
    , 0x22
    , 0x42
    , 0xca
    , 0x08
    , 0xcd
    , 0x99
    , 0xc9
    , 0xec
    , 0xb1
    , 0x2f
    , 0xc4
    , 0x9a
    , 0xdb
    , 0x2b
    , 0x25
    , 0x72
    , 0x40
    , 0xcc
    , 0x38
    , 0x78
    , 0x02
    , 0xf0
    , 0x0e
    , 0x0e
    , 0x49
    , 0x95
    , 0x26
    , 0x63
    , 0xea
    , 0x27
    , 0x84
    , 0x08
    , 0x70
    , 0x9b
    , 0xce
    , 0x5b
    , 0x36
    , 0x3c
    , 0x03
    , 0x60
    , 0x93
    , 0xd7
    , 0xa0
    , 0x5d
    , 0x44
    , 0x0c
    , 0x9e
    , 0x7a
    , 0x7a
    , 0xbb
    , 0x3d
    , 0x71
    , 0xeb
    , 0xb4
    , 0xd1
    , 0x0b
    , 0xfc
    , 0x77
    , 0x81
    , 0xbc
    , 0xd6
    , 0x6f
    , 0x79
    , 0x32
    , 0x2c
    , 0x18
    , 0x26
    , 0x2d
    , 0xfc
    , 0x2d
    , 0xcc
    , 0xf3
    , 0xe5
    , 0xf1
    , 0xea
    , 0x98
    , 0xbe
    , 0xa3
    , 0xca
    , 0xae
    , 0x8a
    , 0x83
    , 0x70
    , 0x63
    , 0x12
    , 0x76
    , 0x44
    , 0x23
    , 0xa6
    , 0x92
    , 0xae
    , 0x0c
    , 0x1e
    , 0x2e
    , 0x23
    , 0xb0
    , 0x16
    , 0x86
    , 0x5f
    , 0xfb
    , 0x12
    , 0x5b
    , 0x22
    , 0x38
    , 0x57
    , 0x54
    , 0x7a
    , 0xc7
    , 0xe2
    , 0x46
    , 0x84
    , 0x33
    , 0xb5
    , 0x26
    , 0x98
    , 0x43
    , 0xab
    , 0xba
    , 0xbb
    , 0xe9
    , 0xf6
    , 0xf4
    , 0x38
    , 0xd7
    , 0xe3
    , 0x87
    , 0xe3
    , 0x61
    , 0x7a
    , 0x21
    , 0x9f
    , 0x62
    , 0x54
    , 0x0e
    , 0x73
    , 0x43
    , 0xe1
    , 0xbb
    , 0xf4
    , 0x93
    , 0x55
    , 0xfb
    , 0x5a
    , 0x19
    , 0x38
    , 0x04
    , 0x84
    , 0x39
    , 0xcb
    , 0xa5
    , 0xce
    , 0xe8
    , 0x19
    , 0x19
    , 0x9b
    , 0x2b
    , 0x5c
    , 0x39
    , 0xfd
    , 0x35
    , 0x1a
    , 0xa2
    , 0x74
    , 0x53
    , 0x6a
    , 0xad
    , 0xb6
    , 0x82
    , 0xb5
    , 0x78
    , 0x94
    , 0x3f
    , 0x0c
    , 0xcf
    , 0x48
    , 0xe4
    , 0xec
    , 0x7d
    , 0xdc
    , 0x93
    , 0x8e
    , 0x2f
    , 0xd0
    , 0x1a
    , 0xcf
    , 0xaa
    , 0x1e
    , 0x72
    , 0x17
    , 0xf7
    , 0xb3
    , 0x89
    , 0x28
    , 0x5c
    , 0x0d
    , 0xfd
    , 0x31
    , 0xa1
    , 0x54
    , 0x5e
    , 0xd3
    , 0xa8
    , 0x5f
    , 0xac
    , 0x8e
    , 0xb9
    , 0xda
    , 0xb6
    , 0xee
    , 0x82
    , 0x6a
    , 0xf9
    , 0x0f
    , 0x9e
    , 0x1e
    , 0xe5
    , 0xd5
    , 0x55
    , 0xdd
    , 0x1c
    , 0x05
    , 0xae
    , 0xc0
    , 0x77
    , 0xf7
    , 0xc8
    , 0x03
    , 0xcb
    , 0xc2
    , 0xf1
    , 0xcf
    , 0x98
    , 0x39
    , 0x3f
    , 0x0f
    , 0x37
    , 0x83
    , 0x8f
    , 0xfe
    , 0xa3
    , 0x72
    , 0xff
    , 0x70
    , 0x88
    , 0x86
    , 0xb0
    , 0x59
    , 0x34
    , 0xe1
    , 0xa6
    , 0x45
    , 0x12
    , 0xde
    , 0x14
    , 0x46
    , 0x08
    , 0x86
    , 0x4a
    , 0x88
    , 0xa5
    , 0xc3
    , 0xa1
    , 0x73
    , 0xfd
    , 0xcf
    , 0xdf
    , 0x57
    , 0x25
    , 0xda
    , 0x91
    , 0x6e
    , 0xd5
    , 0x07
    , 0xe4
    , 0xca
    , 0xec
    , 0x87
    , 0x87
    , 0xbe
    , 0xfb
    , 0x91
    , 0xe3
    , 0xec
    , 0x9b
    , 0x22
    , 0x2f
    , 0xa0
    , 0x9f
    , 0x37
    , 0x4b
    , 0xd9
    , 0x68
    , 0x81
    , 0xac
    , 0x2d
    , 0xdd
    , 0x1f
    , 0x88
    , 0x5d
    , 0x42
    , 0xea
    , 0x58
    , 0x4c
    ]



testPlainText :: B.ByteString
testPlainText = B.pack
    [ 0x08
    , 0x00
    , 0x00
    , 0x02
    , 0x00
    , 0x00
    , 0x0b
    , 0x00
    , 0x03
    , 0x2e
    , 0x00
    , 0x00
    , 0x03
    , 0x2a
    , 0x00
    , 0x03
    , 0x25
    , 0x30
    , 0x82
    , 0x03
    , 0x21
    , 0x30
    , 0x82
    , 0x02
    , 0x09
    , 0xa0
    , 0x03
    , 0x02
    , 0x01
    , 0x02
    , 0x02
    , 0x08
    , 0x15
    , 0x5a
    , 0x92
    , 0xad
    , 0xc2
    , 0x04
    , 0x8f
    , 0x90
    , 0x30
    , 0x0d
    , 0x06
    , 0x09
    , 0x2a
    , 0x86
    , 0x48
    , 0x86
    , 0xf7
    , 0x0d
    , 0x01
    , 0x01
    , 0x0b
    , 0x05
    , 0x00
    , 0x30
    , 0x22
    , 0x31
    , 0x0b
    , 0x30
    , 0x09
    , 0x06
    , 0x03
    , 0x55
    , 0x04
    , 0x06
    , 0x13
    , 0x02
    , 0x55
    , 0x53
    , 0x31
    , 0x13
    , 0x30
    , 0x11
    , 0x06
    , 0x03
    , 0x55
    , 0x04
    , 0x0a
    , 0x13
    , 0x0a
    , 0x45
    , 0x78
    , 0x61
    , 0x6d
    , 0x70
    , 0x6c
    , 0x65
    , 0x20
    , 0x43
    , 0x41
    , 0x30
    , 0x1e
    , 0x17
    , 0x0d
    , 0x31
    , 0x38
    , 0x31
    , 0x30
    , 0x30
    , 0x35
    , 0x30
    , 0x31
    , 0x33
    , 0x38
    , 0x31
    , 0x37
    , 0x5a
    , 0x17
    , 0x0d
    , 0x31
    , 0x39
    , 0x31
    , 0x30
    , 0x30
    , 0x35
    , 0x30
    , 0x31
    , 0x33
    , 0x38
    , 0x31
    , 0x37
    , 0x5a
    , 0x30
    , 0x2b
    , 0x31
    , 0x0b
    , 0x30
    , 0x09
    , 0x06
    , 0x03
    , 0x55
    , 0x04
    , 0x06
    , 0x13
    , 0x02
    , 0x55
    , 0x53
    , 0x31
    , 0x1c
    , 0x30
    , 0x1a
    , 0x06
    , 0x03
    , 0x55
    , 0x04
    , 0x03
    , 0x13
    , 0x13
    , 0x65
    , 0x78
    , 0x61
    , 0x6d
    , 0x70
    , 0x6c
    , 0x65
    , 0x2e
    , 0x75
    , 0x6c
    , 0x66
    , 0x68
    , 0x65
    , 0x69
    , 0x6d
    , 0x2e
    , 0x6e
    , 0x65
    , 0x74
    , 0x30
    , 0x82
    , 0x01
    , 0x22
    , 0x30
    , 0x0d
    , 0x06
    , 0x09
    , 0x2a
    , 0x86
    , 0x48
    , 0x86
    , 0xf7
    , 0x0d
    , 0x01
    , 0x01
    , 0x01
    , 0x05
    , 0x00
    , 0x03
    , 0x82
    , 0x01
    , 0x0f
    , 0x00
    , 0x30
    , 0x82
    , 0x01
    , 0x0a
    , 0x02
    , 0x82
    , 0x01
    , 0x01
    , 0x00
    , 0xc4
    , 0x80
    , 0x36
    , 0x06
    , 0xba
    , 0xe7
    , 0x47
    , 0x6b
    , 0x08
    , 0x94
    , 0x04
    , 0xec
    , 0xa7
    , 0xb6
    , 0x91
    , 0x04
    , 0x3f
    , 0xf7
    , 0x92
    , 0xbc
    , 0x19
    , 0xee
    , 0xfb
    , 0x7d
    , 0x74
    , 0xd7
    , 0xa8
    , 0x0d
    , 0x00
    , 0x1e
    , 0x7b
    , 0x4b
    , 0x3a
    , 0x4a
    , 0xe6
    , 0x0f
    , 0xe8
    , 0xc0
    , 0x71
    , 0xfc
    , 0x73
    , 0xe7
    , 0x02
    , 0x4c
    , 0x0d
    , 0xbc
    , 0xf4
    , 0xbd
    , 0xd1
    , 0x1d
    , 0x39
    , 0x6b
    , 0xba
    , 0x70
    , 0x46
    , 0x4a
    , 0x13
    , 0xe9
    , 0x4a
    , 0xf8
    , 0x3d
    , 0xf3
    , 0xe1
    , 0x09
    , 0x59
    , 0x54
    , 0x7b
    , 0xc9
    , 0x55
    , 0xfb
    , 0x41
    , 0x2d
    , 0xa3
    , 0x76
    , 0x52
    , 0x11
    , 0xe1
    , 0xf3
    , 0xdc
    , 0x77
    , 0x6c
    , 0xaa
    , 0x53
    , 0x37
    , 0x6e
    , 0xca
    , 0x3a
    , 0xec
    , 0xbe
    , 0xc3
    , 0xaa
    , 0xb7
    , 0x3b
    , 0x31
    , 0xd5
    , 0x6c
    , 0xb6
    , 0x52
    , 0x9c
    , 0x80
    , 0x98
    , 0xbc
    , 0xc9
    , 0xe0
    , 0x28
    , 0x18
    , 0xe2
    , 0x0b
    , 0xf7
    , 0xf8
    , 0xa0
    , 0x3a
    , 0xfd
    , 0x17
    , 0x04
    , 0x50
    , 0x9e
    , 0xce
    , 0x79
    , 0xbd
    , 0x9f
    , 0x39
    , 0xf1
    , 0xea
    , 0x69
    , 0xec
    , 0x47
    , 0x97
    , 0x2e
    , 0x83
    , 0x0f
    , 0xb5
    , 0xca
    , 0x95
    , 0xde
    , 0x95
    , 0xa1
    , 0xe6
    , 0x04
    , 0x22
    , 0xd5
    , 0xee
    , 0xbe
    , 0x52
    , 0x79
    , 0x54
    , 0xa1
    , 0xe7
    , 0xbf
    , 0x8a
    , 0x86
    , 0xf6
    , 0x46
    , 0x6d
    , 0x0d
    , 0x9f
    , 0x16
    , 0x95
    , 0x1a
    , 0x4c
    , 0xf7
    , 0xa0
    , 0x46
    , 0x92
    , 0x59
    , 0x5c
    , 0x13
    , 0x52
    , 0xf2
    , 0x54
    , 0x9e
    , 0x5a
    , 0xfb
    , 0x4e
    , 0xbf
    , 0xd7
    , 0x7a
    , 0x37
    , 0x95
    , 0x01
    , 0x44
    , 0xe4
    , 0xc0
    , 0x26
    , 0x87
    , 0x4c
    , 0x65
    , 0x3e
    , 0x40
    , 0x7d
    , 0x7d
    , 0x23
    , 0x07
    , 0x44
    , 0x01
    , 0xf4
    , 0x84
    , 0xff
    , 0xd0
    , 0x8f
    , 0x7a
    , 0x1f
    , 0xa0
    , 0x52
    , 0x10
    , 0xd1
    , 0xf4
    , 0xf0
    , 0xd5
    , 0xce
    , 0x79
    , 0x70
    , 0x29
    , 0x32
    , 0xe2
    , 0xca
    , 0xbe
    , 0x70
    , 0x1f
    , 0xdf
    , 0xad
    , 0x6b
    , 0x4b
    , 0xb7
    , 0x11
    , 0x01
    , 0xf4
    , 0x4b
    , 0xad
    , 0x66
    , 0x6a
    , 0x11
    , 0x13
    , 0x0f
    , 0xe2
    , 0xee
    , 0x82
    , 0x9e
    , 0x4d
    , 0x02
    , 0x9d
    , 0xc9
    , 0x1c
    , 0xdd
    , 0x67
    , 0x16
    , 0xdb
    , 0xb9
    , 0x06
    , 0x18
    , 0x86
    , 0xed
    , 0xc1
    , 0xba
    , 0x94
    , 0x21
    , 0x02
    , 0x03
    , 0x01
    , 0x00
    , 0x01
    , 0xa3
    , 0x52
    , 0x30
    , 0x50
    , 0x30
    , 0x0e
    , 0x06
    , 0x03
    , 0x55
    , 0x1d
    , 0x0f
    , 0x01
    , 0x01
    , 0xff
    , 0x04
    , 0x04
    , 0x03
    , 0x02
    , 0x05
    , 0xa0
    , 0x30
    , 0x1d
    , 0x06
    , 0x03
    , 0x55
    , 0x1d
    , 0x25
    , 0x04
    , 0x16
    , 0x30
    , 0x14
    , 0x06
    , 0x08
    , 0x2b
    , 0x06
    , 0x01
    , 0x05
    , 0x05
    , 0x07
    , 0x03
    , 0x02
    , 0x06
    , 0x08
    , 0x2b
    , 0x06
    , 0x01
    , 0x05
    , 0x05
    , 0x07
    , 0x03
    , 0x01
    , 0x30
    , 0x1f
    , 0x06
    , 0x03
    , 0x55
    , 0x1d
    , 0x23
    , 0x04
    , 0x18
    , 0x30
    , 0x16
    , 0x80
    , 0x14
    , 0x89
    , 0x4f
    , 0xde
    , 0x5b
    , 0xcc
    , 0x69
    , 0xe2
    , 0x52
    , 0xcf
    , 0x3e
    , 0xa3
    , 0x00
    , 0xdf
    , 0xb1
    , 0x97
    , 0xb8
    , 0x1d
    , 0xe1
    , 0xc1
    , 0x46
    , 0x30
    , 0x0d
    , 0x06
    , 0x09
    , 0x2a
    , 0x86
    , 0x48
    , 0x86
    , 0xf7
    , 0x0d
    , 0x01
    , 0x01
    , 0x0b
    , 0x05
    , 0x00
    , 0x03
    , 0x82
    , 0x01
    , 0x01
    , 0x00
    , 0x59
    , 0x16
    , 0x45
    , 0xa6
    , 0x9a
    , 0x2e
    , 0x37
    , 0x79
    , 0xe4
    , 0xf6
    , 0xdd
    , 0x27
    , 0x1a
    , 0xba
    , 0x1c
    , 0x0b
    , 0xfd
    , 0x6c
    , 0xd7
    , 0x55
    , 0x99
    , 0xb5
    , 0xe7
    , 0xc3
    , 0x6e
    , 0x53
    , 0x3e
    , 0xff
    , 0x36
    , 0x59
    , 0x08
    , 0x43
    , 0x24
    , 0xc9
    , 0xe7
    , 0xa5
    , 0x04
    , 0x07
    , 0x9d
    , 0x39
    , 0xe0
    , 0xd4
    , 0x29
    , 0x87
    , 0xff
    , 0xe3
    , 0xeb
    , 0xdd
    , 0x09
    , 0xc1
    , 0xcf
    , 0x1d
    , 0x91
    , 0x44
    , 0x55
    , 0x87
    , 0x0b
    , 0x57
    , 0x1d
    , 0xd1
    , 0x9b
    , 0xdf
    , 0x1d
    , 0x24
    , 0xf8
    , 0xbb
    , 0x9a
    , 0x11
    , 0xfe
    , 0x80
    , 0xfd
    , 0x59
    , 0x2b
    , 0xa0
    , 0x39
    , 0x8c
    , 0xde
    , 0x11
    , 0xe2
    , 0x65
    , 0x1e
    , 0x61
    , 0x8c
    , 0xe5
    , 0x98
    , 0xfa
    , 0x96
    , 0xe5
    , 0x37
    , 0x2e
    , 0xef
    , 0x3d
    , 0x24
    , 0x8a
    , 0xfd
    , 0xe1
    , 0x74
    , 0x63
    , 0xeb
    , 0xbf
    , 0xab
    , 0xb8
    , 0xe4
    , 0xd1
    , 0xab
    , 0x50
    , 0x2a
    , 0x54
    , 0xec
    , 0x00
    , 0x64
    , 0xe9
    , 0x2f
    , 0x78
    , 0x19
    , 0x66
    , 0x0d
    , 0x3f
    , 0x27
    , 0xcf
    , 0x20
    , 0x9e
    , 0x66
    , 0x7f
    , 0xce
    , 0x5a
    , 0xe2
    , 0xe4
    , 0xac
    , 0x99
    , 0xc7
    , 0xc9
    , 0x38
    , 0x18
    , 0xf8
    , 0xb2
    , 0x51
    , 0x07
    , 0x22
    , 0xdf
    , 0xed
    , 0x97
    , 0xf3
    , 0x2e
    , 0x3e
    , 0x93
    , 0x49
    , 0xd4
    , 0xc6
    , 0x6c
    , 0x9e
    , 0xa6
    , 0x39
    , 0x6d
    , 0x74
    , 0x44
    , 0x62
    , 0xa0
    , 0x6b
    , 0x42
    , 0xc6
    , 0xd5
    , 0xba
    , 0x68
    , 0x8e
    , 0xac
    , 0x3a
    , 0x01
    , 0x7b
    , 0xdd
    , 0xfc
    , 0x8e
    , 0x2c
    , 0xfc
    , 0xad
    , 0x27
    , 0xcb
    , 0x69
    , 0xd3
    , 0xcc
    , 0xdc
    , 0xa2
    , 0x80
    , 0x41
    , 0x44
    , 0x65
    , 0xd3
    , 0xae
    , 0x34
    , 0x8c
    , 0xe0
    , 0xf3
    , 0x4a
    , 0xb2
    , 0xfb
    , 0x9c
    , 0x61
    , 0x83
    , 0x71
    , 0x31
    , 0x2b
    , 0x19
    , 0x10
    , 0x41
    , 0x64
    , 0x1c
    , 0x23
    , 0x7f
    , 0x11
    , 0xa5
    , 0xd6
    , 0x5c
    , 0x84
    , 0x4f
    , 0x04
    , 0x04
    , 0x84
    , 0x99
    , 0x38
    , 0x71
    , 0x2b
    , 0x95
    , 0x9e
    , 0xd6
    , 0x85
    , 0xbc
    , 0x5c
    , 0x5d
    , 0xd6
    , 0x45
    , 0xed
    , 0x19
    , 0x90
    , 0x94
    , 0x73
    , 0x40
    , 0x29
    , 0x26
    , 0xdc
    , 0xb4
    , 0x0e
    , 0x34
    , 0x69
    , 0xa1
    , 0x59
    , 0x41
    , 0xe8
    , 0xe2
    , 0xcc
    , 0xa8
    , 0x4b
    , 0xb6
    , 0x08
    , 0x46
    , 0x36
    , 0xa0
    , 0x00
    , 0x00
    , 0x0f
    , 0x00
    , 0x01
    , 0x04
    , 0x08
    , 0x04
    , 0x01
    , 0x00
    , 0x17
    , 0xfe
    , 0xb5
    , 0x33
    , 0xca
    , 0x6d
    , 0x00
    , 0x7d
    , 0x00
    , 0x58
    , 0x25
    , 0x79
    , 0x68
    , 0x42
    , 0x4b
    , 0xbc
    , 0x3a
    , 0xa6
    , 0x90
    , 0x9e
    , 0x9d
    , 0x49
    , 0x55
    , 0x75
    , 0x76
    , 0xa5
    , 0x20
    , 0xe0
    , 0x4a
    , 0x5e
    , 0xf0
    , 0x5f
    , 0x0e
    , 0x86
    , 0xd2
    , 0x4f
    , 0xf4
    , 0x3f
    , 0x8e
    , 0xb8
    , 0x61
    , 0xee
    , 0xf5
    , 0x95
    , 0x22
    , 0x8d
    , 0x70
    , 0x32
    , 0xaa
    , 0x36
    , 0x0f
    , 0x71
    , 0x4e
    , 0x66
    , 0x74
    , 0x13
    , 0x92
    , 0x6e
    , 0xf4
    , 0xf8
    , 0xb5
    , 0x80
    , 0x3b
    , 0x69
    , 0xe3
    , 0x55
    , 0x19
    , 0xe3
    , 0xb2
    , 0x3f
    , 0x43
    , 0x73
    , 0xdf
    , 0xac
    , 0x67
    , 0x87
    , 0x06
    , 0x6d
    , 0xcb
    , 0x47
    , 0x56
    , 0xb5
    , 0x45
    , 0x60
    , 0xe0
    , 0x88
    , 0x6e
    , 0x9b
    , 0x96
    , 0x2c
    , 0x4a
    , 0xd2
    , 0x8d
    , 0xab
    , 0x26
    , 0xba
    , 0xd1
    , 0xab
    , 0xc2
    , 0x59
    , 0x16
    , 0xb0
    , 0x9a
    , 0xf2
    , 0x86
    , 0x53
    , 0x7f
    , 0x68
    , 0x4f
    , 0x80
    , 0x8a
    , 0xef
    , 0xee
    , 0x73
    , 0x04
    , 0x6c
    , 0xb7
    , 0xdf
    , 0x0a
    , 0x84
    , 0xfb
    , 0xb5
    , 0x96
    , 0x7a
    , 0xca
    , 0x13
    , 0x1f
    , 0x4b
    , 0x1c
    , 0xf3
    , 0x89
    , 0x79
    , 0x94
    , 0x03
    , 0xa3
    , 0x0c
    , 0x02
    , 0xd2
    , 0x9c
    , 0xbd
    , 0xad
    , 0xb7
    , 0x25
    , 0x12
    , 0xdb
    , 0x9c
    , 0xec
    , 0x2e
    , 0x5e
    , 0x1d
    , 0x00
    , 0xe5
    , 0x0c
    , 0xaf
    , 0xcf
    , 0x6f
    , 0x21
    , 0x09
    , 0x1e
    , 0xbc
    , 0x4f
    , 0x25
    , 0x3c
    , 0x5e
    , 0xab
    , 0x01
    , 0xa6
    , 0x79
    , 0xba
    , 0xea
    , 0xbe
    , 0xed
    , 0xb9
    , 0xc9
    , 0x61
    , 0x8f
    , 0x66
    , 0x00
    , 0x6b
    , 0x82
    , 0x44
    , 0xd6
    , 0x62
    , 0x2a
    , 0xaa
    , 0x56
    , 0x88
    , 0x7c
    , 0xcf
    , 0xc6
    , 0x6a
    , 0x0f
    , 0x38
    , 0x51
    , 0xdf
    , 0xa1
    , 0x3a
    , 0x78
    , 0xcf
    , 0xf7
    , 0x99
    , 0x1e
    , 0x03
    , 0xcb
    , 0x2c
    , 0x3a
    , 0x0e
    , 0xd8
    , 0x7d
    , 0x73
    , 0x67
    , 0x36
    , 0x2e
    , 0xb7
    , 0x80
    , 0x5b
    , 0x00
    , 0xb2
    , 0x52
    , 0x4f
    , 0xf2
    , 0x98
    , 0xa4
    , 0xda
    , 0x48
    , 0x7c
    , 0xac
    , 0xde
    , 0xaf
    , 0x8a
    , 0x23
    , 0x36
    , 0xc5
    , 0x63
    , 0x1b
    , 0x3e
    , 0xfa
    , 0x93
    , 0x5b
    , 0xb4
    , 0x11
    , 0xe7
    , 0x53
    , 0xca
    , 0x13
    , 0xb0
    , 0x15
    , 0xfe
    , 0xc7
    , 0xe4
    , 0xa7
    , 0x30
    , 0xf1
    , 0x36
    , 0x9f
    , 0x9e
    , 0x14
    , 0x00
    , 0x00
    , 0x20
    , 0xea
    , 0x6e
    , 0xe1
    , 0x76
    , 0xdc
    , 0xcc
    , 0x4a
    , 0xf1
    , 0x85
    , 0x9e
    , 0x9e
    , 0x4e
    , 0x93
    , 0xf7
    , 0x97
    , 0xea
    , 0xc9
    , 0xa7
    , 0x8c
    , 0xe4
    , 0x39
    , 0x30
    , 0x1e
    , 0x35
    , 0x27
    , 0x5a
    , 0xd4
    , 0x3f
    , 0x3c
    , 0xdd
    , 0xbd
    , 0xe3
    , 0x16
    ]
